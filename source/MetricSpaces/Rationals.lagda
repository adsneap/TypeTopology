Andrew Sneap, 10 March 2022

In this file, I prove that the Rationals are metric space, with
respect to the usual metric.

\begin{code}

{-# OPTIONS --without-K --exact-split --safe --no-sized-types --no-guardedness --auto-inline #-}

open import MLTT.Spartan renaming (_+_ to _‚àî_)

open import Notation.Order
open import UF.FunExt
open import UF.Base
open import UF.Subsingletons
open import UF.PropTrunc
open import Rationals.Type
open import Rationals.Abs
open import Rationals.Addition
open import Rationals.Negation
open import Rationals.Order
open import Rationals.Positive hiding (_+_)

module MetricSpaces.Rationals
         (fe : Fun-Ext)
         (pe : Prop-Ext)
         (pt : propositional-truncations-exist)

 where

open import Rationals.MinMax
open import MetricSpaces.Definition fe pe pt

‚Ñö-metric : ‚Ñö ‚Üí ‚Ñö ‚Üí ‚Ñö
‚Ñö-metric p q = abs (p - q)

‚Ñö-zero-dist : (q : ‚Ñö) ‚Üí ‚Ñö-metric q q Ôºù 0‚Ñö
‚Ñö-zero-dist q = ‚Ñö-metric q q  Ôºù‚ü® by-definition                    ‚ü©
                abs (q - q)   Ôºù‚ü® ap abs (‚Ñö-inverse-sum-to-zero q) ‚ü©
                abs 0‚Ñö        Ôºù‚ü® by-definition                    ‚ü©
                0‚Ñö            ‚àé

‚Ñö<-abs : (x y : ‚Ñö) ‚Üí x < y ‚Üí y - x Ôºù abs (x - y)
‚Ñö<-abs x y l = Œ≥
 where
  I : 0‚Ñö < y - x
  I = ‚Ñö<-difference-positive x y l

  Œ≥ : y - x Ôºù abs (x - y)
  Œ≥ = y - x       Ôºù‚ü® abs-of-pos-is-pos' (y - x) I ‚Åª¬π ‚ü©
      abs (y - x) Ôºù‚ü® abs-comm y x                    ‚ü©
      abs (x - y) ‚àé

inequality-chain-to-metric : (p q r : ‚Ñö)
                           ‚Üí p ‚â§ q
                           ‚Üí q ‚â§ r
                           ‚Üí ‚Ñö-metric p r Ôºù ‚Ñö-metric p q + ‚Ñö-metric q r
inequality-chain-to-metric p q r l‚ÇÅ l‚ÇÇ = Œ≥
 where
  Œ≥‚ÇÅ : abs (p - q) Ôºù q - p
  Œ≥‚ÇÅ = ‚Ñö‚â§-to-abs' p q l‚ÇÅ

  Œ≥‚ÇÇ : abs (q - r) Ôºù r - q
  Œ≥‚ÇÇ = ‚Ñö‚â§-to-abs' q r l‚ÇÇ

  I : p ‚â§ r
  I = ‚Ñö‚â§-trans p q r l‚ÇÅ l‚ÇÇ

  Œ≥‚ÇÉ : abs (p - r) Ôºù r - p
  Œ≥‚ÇÉ = ‚Ñö‚â§-to-abs' p r I

  Œ≥ : ‚Ñö-metric p r Ôºù ‚Ñö-metric p q + ‚Ñö-metric q r
  Œ≥ = ‚Ñö-metric p r                Ôºù‚ü® Œ≥‚ÇÉ                                  ‚ü©
      r - p                       Ôºù‚ü® ap (_- p) (‚Ñö-inverse-intro'''' r q) ‚ü©
      r - q + q - p               Ôºù‚ü® ‚Ñö+-assoc (r - q) q (- p)            ‚ü©
      r - q + (q - p)             Ôºù‚ü® ‚Ñö+-comm (r - q) (q - p)             ‚ü©
      q - p + (r - q)             Ôºù‚ü® ap (_+ (r - q)) (Œ≥‚ÇÅ ‚Åª¬π)             ‚ü©
      abs (p - q) + (r - q)       Ôºù‚ü® ap (‚Ñö-metric p q +_) (Œ≥‚ÇÇ ‚Åª¬π)        ‚ü©
      ‚Ñö-metric p q + ‚Ñö-metric q r ‚àé

inequality-chain-with-metric : (x y w z Œµ‚ÇÅ Œµ‚ÇÇ : ‚Ñö)
                             ‚Üí w ‚â§ y
                             ‚Üí y ‚â§ z
                             ‚Üí ‚Ñö-metric x y < Œµ‚ÇÅ
                             ‚Üí ‚Ñö-metric w z < Œµ‚ÇÇ
                             ‚Üí ‚Ñö-metric x z < (Œµ‚ÇÅ + Œµ‚ÇÇ)
inequality-chain-with-metric x y w z Œµ‚ÇÅ Œµ‚ÇÇ l‚ÇÅ l‚ÇÇ l‚ÇÉ l‚ÇÑ = Œ≥
 where
  I : abs (x - z) ‚â§ abs (x - y) + abs (y - z)
  I = ‚Ñö-triangle-inequality' x y z

  II : ‚Ñö-metric w z Ôºù ‚Ñö-metric y z + ‚Ñö-metric w y
  II = ‚Ñö-metric w z                Ôºù‚ü® inequality-chain-to-metric w y z l‚ÇÅ l‚ÇÇ ‚ü©
       ‚Ñö-metric w y + ‚Ñö-metric y z Ôºù‚ü® ‚Ñö+-comm (abs (w - y)) (abs (y - z))    ‚ü©
       abs (y - z) + abs (w - y)   ‚àé

  III : 0‚Ñö ‚â§ abs (w - y)
  III = ‚Ñö-abs-is-positive (w - y)

  IV : abs (y - z) ‚â§ abs (y - z) + abs (w - y)
  IV = ‚Ñö‚â§-addition-preserves-order'' (abs (y - z)) (abs (w - y) ) III

  V : abs (y - z) ‚â§ abs (w - z)
  V = transport (abs (y - z) ‚â§_) (II ‚Åª¬π) IV

  VI : abs (y - z) < Œµ‚ÇÇ
  VI = ‚Ñö‚â§-<-trans (abs (y - z)) (abs (w - z)) Œµ‚ÇÇ V l‚ÇÑ

  VII : abs (x - y) + abs (y - z) < Œµ‚ÇÅ + Œµ‚ÇÇ
  VII = ‚Ñö<-adding (abs (x - y)) Œµ‚ÇÅ (abs (y - z)) Œµ‚ÇÇ l‚ÇÉ VI

  Œ≥ : ‚Ñö-metric x z < Œµ‚ÇÅ + Œµ‚ÇÇ
  Œ≥ = ‚Ñö‚â§-<-trans (abs (x - z)) (abs (x - y) + abs (y - z)) (Œµ‚ÇÅ + Œµ‚ÇÇ) I VII

B-‚Ñö : (x y : ‚Ñö) (Œµ : ‚Ñö‚Çä) ‚Üí ùì§‚ÇÄ Ãá
B-‚Ñö x y (Œµ , 0<Œµ) = ‚Ñö-metric x y < Œµ

‚Ñö-m1a : m1a ‚Ñö B-‚Ñö
‚Ñö-m1a x y f = cases Œ≥‚ÇÅ Œ≥‚ÇÇ I
 where
  Œ± : ‚Ñö
  Œ± = ‚Ñö-metric x y

  0‚â§Œ± : 0‚Ñö ‚â§ Œ±
  0‚â§Œ± = ‚Ñö-abs-is-positive (x - y)

  I : (0‚Ñö < Œ±) ‚àî (0‚Ñö Ôºù abs (x - y))
  I = ‚Ñö‚â§-split 0‚Ñö Œ± 0‚â§Œ±

  Œ≥‚ÇÅ : 0‚Ñö < Œ± ‚Üí x Ôºù y
  Œ≥‚ÇÅ l = ùüò-elim (‚Ñö<-not-itself Œ± (f (Œ± , l )))

  Œ≥‚ÇÇ : 0‚Ñö Ôºù abs (x - y) ‚Üí x Ôºù y
  Œ≥‚ÇÇ e = x         Ôºù‚ü® ‚Ñö-inverse-intro'''' x y                       ‚ü©
         x - y + y Ôºù‚ü® ap (_+ y) (‚Ñö-abs-zero-is-zero (x - y) (e ‚Åª¬π)) ‚ü©
         0‚Ñö + y    Ôºù‚ü® ‚Ñö-zero-left-neutral y                         ‚ü©
         y ‚àé

‚Ñö-m1b : m1b ‚Ñö B-‚Ñö
‚Ñö-m1b x (Œµ , 0<Œµ) = transport (_< Œµ) (‚Ñö-zero-dist x ‚Åª¬π) 0<Œµ

‚Ñö-m2 : m2 ‚Ñö B-‚Ñö
‚Ñö-m2 x y (Œµ , 0<Œµ) = transport (_< Œµ) (abs-comm x y)

‚Ñö-m3 : m3 ‚Ñö B-‚Ñö
‚Ñö-m3 x y (Œµ‚ÇÅ , 0<Œµ‚ÇÅ) (Œµ‚ÇÇ , 0<Œµ‚ÇÇ) l B = ‚Ñö<-trans (‚Ñö-metric x y) Œµ‚ÇÅ Œµ‚ÇÇ B l

‚Ñö-m4 : m4 ‚Ñö B-‚Ñö
‚Ñö-m4 x y z (Œµ‚ÇÅ , 0<Œµ‚ÇÅ) (Œµ‚ÇÇ , 0<Œµ‚ÇÇ) B‚ÇÅ B‚ÇÇ = conclusion Œ±
 where
  Œ± : abs ((x - y) + (y - z)) ‚â§ (abs (x - y) + abs (y - z))
  Œ± = ‚Ñö-triangle-inequality (x - y) (y - z)

  Œ≤ : (abs (x - y) + abs (y - z)) < (Œµ‚ÇÅ + Œµ‚ÇÇ)
  Œ≤ = ‚Ñö<-adding (abs (x - y)) Œµ‚ÇÅ (abs(y - z)) Œµ‚ÇÇ B‚ÇÅ B‚ÇÇ

  Œ¥ : abs ((x - y) + (y + (- z))) Ôºù abs (x - z)
  Œ¥ = ap abs (‚Ñö-add-zero x (- z) y ‚Åª¬π)

  conclusion : abs ((x - y) + (y - z)) ‚â§ (abs (x - y) + abs (y - z)) ‚Üí abs (x - z) < (Œµ‚ÇÅ + Œµ‚ÇÇ)
  conclusion l = I (‚Ñö‚â§-split (abs ((x - y) + (y - z))) ((abs (x - y) + abs (y - z))) l)
   where
    I : (abs ((x - y) + (y - z)) < (abs (x - y) + abs (y - z)))
      ‚àî (abs ((x - y) + (y - z)) Ôºù abs (x - y) + abs (y - z))
      ‚Üí abs (x - z) < (Œµ‚ÇÅ + Œµ‚ÇÇ)
    I (inl l) =  ‚Ñö<-trans (abs (x - z)) ((abs (x - y) + abs (y - z))) (Œµ‚ÇÅ + Œµ‚ÇÇ) Œ≥ Œ≤
     where
      Œ≥ : abs (x - z) < (abs (x - y) + abs (y - z))
      Œ≥ = transport (Œª k ‚Üí k < (abs (x - y) + abs (y - z))) Œ¥ l
    I (inr e) = transport (_< (Œµ‚ÇÅ + Œµ‚ÇÇ)) (e ‚Åª¬π ‚àô Œ¥) Œ≤

‚Ñö-metric-space : metric-space ‚Ñö
‚Ñö-metric-space = B-‚Ñö , ‚Ñö-m1a , ‚Ñö-m1b , ‚Ñö-m2 , ‚Ñö-m3 , ‚Ñö-m4

\end{code}
